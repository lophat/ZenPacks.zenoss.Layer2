This ZenPack provides support to model OSI Layer 2 (or data link layer) topology. Than that topology information is used to suppress events from devices connection to which was lost because they are connected to broken devices.  Data collection is performed using SNMP.

== Gallery ==
<gallery widths=250px heights=127px>
CDPLLDPDiscover.PNG
ClientMACs.PNG
NeighborSwitches.PNG
</gallery>

== Features ==

The features added by this ZenPack can be summarized as follows. They are each detailed further below.

* Discovery and periodic remodeling of Neighbor Switches using CDP/LLDP.
* Discovery and periodic remodeling of MAC address or forwarding tables.
* Event suppression based on discovered forwarding table information.

=== Discovered Components ===

Assigning the ''zenoss.snmp.CDPLLDPDiscover'' modeler plugin to device(s) will result in SNMP discovery of neighbor switches using a combination of CISCO-CDP-MIB and LLDP-MIB. The discovered neighbor switch information will be shown as ''Neighbor Switches'' in the device's component list.

Assigning the ''zenoss.snmp.ClientMACs'' modeler plugin to device(s) will result in SNMP discovery of the device's forwarding tables using BRIDGE-MIB. This information will be stored on existing ''Network Interfaces'', and won't
result in any new components being created.

=== Monitoring ===

This ZenPack performs no monitoring.

=== Event Suppression ===

The forwarding table information gathered by the ''zenoss.snmp.ClientMACs'' modeler is used to automatically perform event suppression in the case of switch failure.

If Zenoss has modeled the forwarding tables of a server's upstream switches, and those switches fail resulting in the server becoming unreachable, the server failure events will be suppressed while the root cause failures of the switches will be shown.

== Usage ==

This ZenPack has two separate capabilities. The first is to collect clients connected to switch ports so that event suppression can be done when the switch fails, and the second is to discover neighbor relationships between network devices using the CDP (Cisco Discovery Protocol) and LLDP (Link Layer Discover Protocol).

=== Collecting Switch Port Clients ===

To enable discovery of clients connected to switch ports you must enable the ''zenoss.snmp.ClientMACs'' modeler plugin for the switch devices. There is no
need to enable this plugin for hosts, servers, or other endpoint devices. It is recommended to only assign the modeler plugin to access switch to which monitored servers are connected.

The discovery is done using BRIDGE-MIB forwarding tables, so it's a prerequisite that the switch supports BRIDGE-MIB. 

=== Collecting Network Device Neighbors ===

To collect neighbor information from network devices that support CDP or LLDP, you must enable the ``zenoss.snmp.CDPLLDPDiscover`` modeler plugin for the devices.

== Requirements ==

This ZenPack has the following requirements.

;[[ZenPack:PythonCollector|PythonCollector ZenPack]]
: This ZenPack depends on [[ZenPack:PythonCollector|PythonCollector]] being installed, and having the associated ''zenpython'' collector process running.

== Service Impact ==

When combined with the Zenoss Service Dynamics product, this ZenPack adds built-in service impact capability based on Layer 2 data. The following service impact relationships are automatically added. These will be included in any services that contain one or more of the explicitly mentioned entities.

;Service Impact Relationships
* Device impacted by upstream switch device.

== Troubleshooting ==

Please refer the the Zenoss Service Dynamics documentation if you run into any of the following problems:

* ZenPack will not install
* Adding a device fails
* Don't understand how to add a device
* Don't understand how to model a device

If you cannot find the answer in the documentation, then Resource Manager (Service Dynamics) users should contact [https://support.zenoss.com Zenoss Customer Support]. Core users can use the #zenoss IRC channel or the community.zenoss.org forums.

== Layer2 Terminology ==

The essential mechanism that separates network switches from network hubs is the MAC forwarding table. Instead of broadcasting incoming frames of link layer to all it's interfaces, as hub do, switch looks into forwarding table to find out to which particular interface is connected destination device. Switch learns which devices are connected to which interfaces by looking at the source MAC address of incoming frames. Those MAC addresses are called "client MAC addresses".

== Installed Items ==

Installing this ZenPack will add the following items to your Zenoss system.

;Modeler Plugins
* zenoss.snmp.CDPLLDPDiscover
* zenoss.snmp.ClientMACs

== Changes ==

;1.0.3
* Remove macs_catalog when removing the ZenPack. (ZEN-17967)
* Replace Layer2Info template with ClientMACs modeler plugin.

;1.0.2
* Fix modeling of CDP neighbor switches with IPv6 addresses. (ZEN-17248)
* Avoid community@VLAN context querying for non-Cisco switches. (ZEN-17258)
* Change default cycletime for Layer2Info from 30 minutes to 12 hours. (ZEN-17031)

;1.0.1
* Fix device overview links error. (ZEN-14063)
* Remove add/remove from catalog logging. (ZEN-15465)
* Fix usage of incorrect community VLAN suffixes on BRIDGE-MIB queries. (ZEN-16951)
* Fix looping of impact relationships between switches. (ZEN-17020)
* Fix incorrect modeling of neighbor switches and improve modeling time. (ZEN-17023)
* Stop binding Layer2Info template to /Network by default. (ZEN-17035)

;1.0.0
* Initial release
